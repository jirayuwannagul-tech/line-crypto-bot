import cv2
import pytesseract
import re
import matplotlib.pyplot as plt

# 1) ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
img = cv2.imread("wave_chart.png")

if img is None:
    print("‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÑ‡∏ü‡∏•‡πå wave_chart.png - ‡πÄ‡∏ä‡πá‡∏Ñ path ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    exit()

print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ç‡∏ô‡∏≤‡∏î:", img.shape)

# 2) ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imwrite("gray.png", gray)

# 3) Blur + Threshold ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
blur = cv2.GaussianBlur(gray, (5, 5), 0)
_, thresh = cv2.threshold(blur, 150, 255, cv2.THRESH_BINARY)
cv2.imwrite("thresh.png", thresh)

# 4) Invert ‡∏™‡∏µ (‡∏Å‡∏•‡∏±‡∏ö‡∏î‡∏≥ ‚Üî ‡∏Ç‡∏≤‡∏ß)
invert = cv2.bitwise_not(thresh)
cv2.imwrite("invert.png", invert)

# 5) OCR ‡πÇ‡∏î‡∏¢ whitelist ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç/‡∏≠‡∏±‡∏Å‡∏©‡∏£ 12345ABC
custom_config = r'-c tessedit_char_whitelist=12345ABC --psm 6'
text = pytesseract.image_to_string(invert, config=custom_config)

print("\nüìú OCR Output (Raw):")
print(text)

# 6) ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç/‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Wave
waves = re.findall(r"[12345ABC]", text)
print("\nüéØ Detected Waves:", waves)

# 7) ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ OCR
plt.imshow(invert, cmap="gray")
plt.title("Image used for OCR (invert)")
plt.axis("off")
plt.show()
