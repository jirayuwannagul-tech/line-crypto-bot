import pandas as pd
from app.logic.elliott_logic import classify_elliott
from app.analysis.elliott import _build_swings

def debug_elliott_scope(df: pd.DataFrame):
    print("=== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Elliott Wave ===")
    print(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(df)}")
    if "timestamp" in df.columns:
        print(f"‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: {df['timestamp'].iloc[0]} ‚Üí {df['timestamp'].iloc[-1]}")
    else:
        print("‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: index 0 ‚Üí index", len(df)-1)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏∏‡∏î‡∏™‡∏ß‡∏¥‡∏á (Swings)
    swings = _build_swings(df)
    print(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ß‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö: {len(swings)}")
    if not swings.empty:
        print("‡∏™‡∏ß‡∏¥‡∏á‡πÅ‡∏£‡∏Å   :", swings.iloc[0].to_dict())
        print("‡∏™‡∏ß‡∏¥‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:", swings.iloc[-1].to_dict())

    # ‡πÉ‡∏ä‡πâ logic layer (classify_elliott)
    res = classify_elliott(df)
    print("\n=== ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Elliott Wave ===")
    print("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö (Pattern):", res["pattern"])
    print("‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á (Direction):", res["current"]["direction"])
    print("‡∏Ñ‡∏£‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (Completed):", res["completed"])
    print("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏é‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:", len(res.get("rules", [])))
    print("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ß‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:", len(res.get("debug", {}).get("swings", [])))


if __name__ == "__main__":
    # üîπ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡πá‡∏Å ‡πÜ
    data = {
        "high":  [100, 105, 102, 110, 108, 115, 113, 118],
        "low":   [ 95,  98,  96, 100,  99, 105, 107, 112],
        "close": [ 98, 103,  97, 109, 107, 112, 111, 117],
    }
    df = pd.DataFrame(data)

    debug_elliott_scope(df)
